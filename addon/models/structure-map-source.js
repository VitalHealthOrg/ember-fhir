import DS from 'ember-data';
import BackboneElement from 'ember-fhir/models/backbone-element';

const { attr, belongsTo } = DS;

export default BackboneElement.extend({
  context: attr('string'),
  min: attr('number'),
  max: attr('string'),
  type_: attr('string'),
  defaultValueBoolean: attr('boolean', { allowNull: true }),
  defaultValueInteger: attr('number'),
  defaultValueDecimal: attr('number'),
  defaultValueBase64Binary: attr('string'),
  defaultValueInstant: attr('string'),
  defaultValueString: attr('string'),
  defaultValueUri: attr('string'),
  defaultValueDate: attr('date'),
  defaultValueDateTime: attr('date'),
  defaultValueTime: attr('date'),
  defaultValueCode: attr('string'),
  defaultValueOid: attr('string'),
  defaultValueUuid: attr('string'),
  defaultValueId: attr('string'),
  defaultValueUnsignedInt: attr('number'),
  defaultValuePositiveInt: attr('number'),
  defaultValueMarkdown: attr('string'),
  defaultValueElement: belongsTo('element', { async: false, inverse: 'extension' }),
  defaultValueExtension: belongsTo('extension', { async: false, inverse: null }),
  defaultValueBackboneElement: belongsTo('backbone-element', { async: false, inverse: null }),
  defaultValueNarrative: belongsTo('narrative', { async: false }),
  defaultValueAnnotation: belongsTo('annotation', { async: false }),
  defaultValueAttachment: belongsTo('attachment', { async: false }),
  defaultValueIdentifier: belongsTo('identifier', { async: false }),
  defaultValueCodeableConcept: belongsTo('codeable-concept', { async: false }),
  defaultValueCoding: belongsTo('coding', { async: false }),
  defaultValueQuantity: belongsTo('quantity', { async: false }),
  defaultValueDuration: belongsTo('duration', { async: false }),
  defaultValueSimpleQuantity: belongsTo('quantity', { async: false }),
  defaultValueDistance: belongsTo('distance', { async: false }),
  defaultValueCount: belongsTo('count', { async: false }),
  defaultValueMoney: belongsTo('money', { async: false }),
  defaultValueAge: belongsTo('age', { async: false }),
  defaultValueRange: belongsTo('range', { async: false }),
  defaultValuePeriod: belongsTo('period', { async: false }),
  defaultValueRatio: belongsTo('ratio', { async: false }),
  defaultValueReference: belongsTo('reference', { async: false }),
  defaultValueSampledData: belongsTo('sampled-data', { async: false }),
  defaultValueSignature: belongsTo('signature', { async: false }),
  defaultValueHumanName: belongsTo('human-name', { async: false }),
  defaultValueAddress: belongsTo('address', { async: false }),
  defaultValueContactPoint: belongsTo('contact-point', { async: false }),
  defaultValueTiming: belongsTo('timing', { async: false }),
  defaultValueMeta: belongsTo('meta', { async: false }),
  defaultValueElementDefinition: belongsTo('element-definition', { async: false, inverse: null }),
  defaultValueContactDetail: belongsTo('contact-detail', { async: false }),
  defaultValueContributor: belongsTo('contributor', { async: false }),
  defaultValueDosage: belongsTo('dosage', { async: false }),
  defaultValueRelatedArtifact: belongsTo('related-artifact', { async: false }),
  defaultValueUsageContext: belongsTo('usage-context', { async: false }),
  defaultValueDataRequirement: belongsTo('data-requirement', { async: false }),
  defaultValueParameterDefinition: belongsTo('parameter-definition', { async: false }),
  defaultValueTriggerDefinition: belongsTo('trigger-definition', { async: false }),
  element: attr('string'),
  listMode: attr('string'),
  variable: attr('string'),
  condition: attr('string'),
  check: attr('string')
});